name: CI Pipeline

on:
  push:
    branches:
      - main
      - dev
    pull_request:
      branches:
      - main
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest 

    services:
      postgres:
        image:postgres:15
        env:
          POSTGRES_DB: devdb
          POSTGRES_USER: devuser
          POSTGRES_PASSWORD: devpass
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U devuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
        
        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: "3.13.5"
        
        - name: Install backend dependencies
          working-directory: ./services/backend
          run: |
            pip install -r requirements.txt
          
        - name: Run backend tests
          working-directory: ./services/backend
          run: |
            pytest || echo "!!! Backend tests not found or failed !!!"
        
        - name: Set up Node.js 
          uses: actions/setup-node@v4
          with:
            node-version: latest
        
        - name: Install frontend dependencies
          working-directory: ./services/frontend
          run: |
            npm ci || npm install
        
        - name: Lint frontend
          working-directory: ./services/frontend
          run: |
            npm run lint || echo "!!! Lint skipped !!!"
        
        - name: Build frontend
          working-directory: ./services/frontend
          run: |
            npm run build || echo "!!! Build failed !!!"
          
        - name: Build LLM services
          working-directory: ./services/llm 
          run: |
            docker build -t llm-services:test .

        - name: Lint backend # вот эта часть по идее должна измениться, когда будет готов бэк. Он же явно не на питоне будет
          working-directory: ./services/backend
          run: |
            pip install flake8
            flake8 . || echo "!!! Lint warning !!!"

        - name: Run Docker Compose build check
          run: |
            docker compose -f docker-compose.dev.yml config

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Mock deploy
        run: echo "Deploying to dev env..."